#include <stdio.h>
#include <string.h>

long long p1[502],p2[502];

//This array is generated using Mathematica
bool isprime[501]={0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,
    0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,
    1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,
    0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,
    0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,
    0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0};

const char *target="PPPPNNPPPNPPNPN";

int main()
{
	int ptr,i;
	for(i=1; i<=500; i++) p1[i]=1; // 1/500 initially
	p1[0] = 1;   //bounary cases; [0] = [2] and [501] = [499]
	p1[501] = 1; //to simplify loop
	for(ptr=14; ptr>=0; ptr--)
	{
		bool croakP = (target[ptr]=='P');
		for(i=1; i<=500; i++)
		{
			if(isprime[i] ^ croakP)
			{
				p2[i]=(p1[i-1]+p1[i+1])*1;
			}
			else
			{
				p2[i]=(p1[i-1]+p1[i+1])*2;
			}
		}
		p2[0] = p2[2]; //boundary case
		p2[501] = p2[499];
		memmove(p1,p2,sizeof(long long)*502);
	}
	long long sum = 0;
	for(i=1; i<=500; i++) sum+=p1[i];
	//answer is sum/(6^15*500), where 6^15*500 = 235092492288000 = 2^17 * 3^15 * 5^3
	long long denom = 235092492288000LL;
	while(sum%2 == 0 && denom%2 == 0) {sum/=2; denom/=2;}
	while(sum%3 == 0 && denom%3 == 0) {sum/=3; denom/=3;}
	while(sum%5 == 0 && denom%5 == 0) {sum/=5; denom/=5;}
	printf("Answer = %lld/%lld\n",sum,denom);
	return 0;
}